/* dhcplib.h
 * WizNet W5200 Ethernet Controller Driver for MSP430
 * High-level Support I/O Library
 * Dynamic Host Configuration Protocol
 *
 * Ported to RobG's W5500 driver
 *
 * Copyright (c) 2014, Eric Brundick <spirilis@linux.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any purpose
 * with or without fee is hereby granted, provided that the above copyright notice
 * and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT,
 * OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef DHCPLIB_H
#define DHCPLIB_H

#include <msp.h>
#include <stdint.h>
#include "w5500.h"

#ifdef __GNUC__
#define _delay_cycles(x) __delay_cycles(x)
#endif

/* User-tunable options. */
#define DHCP_LOOP_COUNT_TIMEOUT 500
#define DHCP_SOCKFD 7

// Transaction ID; may be changed if necessary, different devices should have unique XIDs.
#define DHCP_XID_0 0x39
#define DHCP_XID_1 0x03
#define DHCP_XID_2 0xF3
#define DHCP_XID_3 0x26

/* DHCP packet structure - Common headers */

#define DHCP_MAGIC_COOKIE 0x63825363
#define DHCP_MAGIC_COOKIE_0 0x63
#define DHCP_MAGIC_COOKIE_1 0x82
#define DHCP_MAGIC_COOKIE_2 0x53
#define DHCP_MAGIC_COOKIE_3 0x63

/* DHCP Message Types */
#define DHCP_MSGTYPE_DHCPDISCOVER 0x01
#define DHCP_MSGTYPE_DHCPOFFER 0x02
#define DHCP_MSGTYPE_DHCPREQUEST 0x03
#define DHCP_MSGTYPE_DHCPDECLINE 0x04
#define DHCP_MSGTYPE_DHCPACK 0x05
#define DHCP_MSGTYPE_DHCPNAK 0x06
#define DHCP_MSGTYPE_DHCPRELEASE 0x07
#define DHCP_MSGTYPE_DHCPINFORM 0x08
#define DHCP_MSGTYPE_DHCPFORCERENEW 0x09
#define DHCP_MSGTYPE_DHCPLEASEQUERY 0x0A
#define DHCP_MSGTYPE_DHCPLEASEUNASSIGNED 0x0B
#define DHCP_MSGTYPE_DHCPLEASEUNKNOWN 0x0C
#define DHCP_MSGTYPE_DHCPLEASEACTIVE 0x0D
#define DHCP_MSGTYPE_DHCPBULKLEASEQUERY 0x0E
#define DHCP_MSGTYPE_DHCPLEASEQUERYDONE 0x0F

/* DHCP Option Codes */
#define DHCP_OPTCODE_PAD 0
#define DHCP_OPTCODE_SUBNET_MASK 1
#define DHCP_OPTCODE_TIME_OFFSET 2
#define DHCP_OPTCODE_ROUTER 3
#define DHCP_OPTCODE_TIME_SERVER 4
#define DHCP_OPTCODE_NAME_SERVER 5
#define DHCP_OPTCODE_DOMAIN_SERVER 6
#define DHCP_OPTCODE_LOG_SERVER 7
#define DHCP_OPTCODE_QUOTES_SERVER 8
#define DHCP_OPTCODE_LPR_SERVER 9
#define DHCP_OPTCODE_IMPRESS_SERVER 10
#define DHCP_OPTCODE_RLP_SERVER 11
#define DHCP_OPTCODE_HOSTNAME 12
#define DHCP_OPTCODE_BOOT_FILE_SIZE 13
#define DHCP_OPTCODE_MERIT_DUMP_FILE 14
#define DHCP_OPTCODE_DOMAIN_NAME 15
#define DHCP_OPTCODE_SWAP_SERVER 16
#define DHCP_OPTCODE_ROOT_PATH 17
#define DHCP_OPTCODE_EXTENSION_FILE 18
#define DHCP_OPTCODE_IP_FORWARDING 19
#define DHCP_OPTCODE_SOURCE_ROUTING 20
#define DHCP_OPTCODE_ROUTING_POLICY_FILTER 21
#define DHCP_OPTCODE_MAX_DATAGRAM_REASSEMBLY 22
#define DHCP_OPTCODE_DEFAULT_IP_TTL 23
#define DHCP_OPTCODE_MTU_TIMEOUT 24
#define DHCP_OPTCODE_MTU_PLATEAU 25
#define DHCP_OPTCODE_MTU_INTERFACE 26
#define DHCP_OPTCODE_MTU_SUBNET 27
#define DHCP_OPTCODE_BROADCAST 28
#define DHCP_OPTCODE_MASK_DISCOVERY 29
#define DHCP_OPTCODE_MASK_SUPPLIER 30
#define DHCP_OPTCODE_ROUTER_DISCOVERY 31
#define DHCP_OPTCODE_ROUTER_REQUEST 32
#define DHCP_OPTCODE_STATIC_ROUTE 33
#define DHCP_OPTCODE_TRAILERS 34
#define DHCP_OPTCODE_ARP_TIMEOUT 35
#define DHCP_OPTCODE_ETHERNET 36
#define DHCP_OPTCODE_DEFAULT_TCP_TTL 37
#define DHCP_OPTCODE_TCP_KEEPALIVE_INTERVAL 38
#define DHCP_OPTCODE_TCP_KEEPALIVE_DATA 39
#define DHCP_OPTCODE_NIS_DOMAIN 40
#define DHCP_OPTCODE_NIS_SERVERS 41
#define DHCP_OPTCODE_NTP_SERVERS 42
#define DHCP_OPTCODE_NETBIOS_NAMESRV 44
#define DHCP_OPTCODE_NETBIOS_DISTSRV 45
#define DHCP_OPTCODE_NETBIOS_NODETYPE 46
#define DHCP_OPTCODE_NETBIOS_SCOPE 47
#define DHCP_OPTCODE_X_WINDOW_FONT_SERVER 48
#define DHCP_OPTCODE_X_WINDOW_DISPLAY_MANAGER 49
#define DHCP_OPTCODE_IP_ADDRESS_REQUEST 50
#define DHCP_OPTCODE_IP_ADDRESS_LEASE_TIME 51
#define DHCP_OPTCODE_OVERLOAD 52
#define DHCP_OPTCODE_DHCP_MSGTYPE 53
#define DHCP_OPTCODE_DHCP_SERVER_IP 54
#define DHCP_OPTCODE_PARAM_LIST 55
#define DHCP_OPTCODE_DHCP_ERROR 56
#define DHCP_OPTCODE_DHCP_MAX_MSGSIZE 57
#define DHCP_OPTCODE_RENEWAL_TIME 58
#define DHCP_OPTCODE_REBINDING_TIME 59
#define DHCP_OPTCODE_CLASS_ID 60
#define DHCP_OPTCODE_CLIENT_ID 61
#define DHCP_OPTCODE_NETWARE_IP_DOMAIN 62
#define DHCP_OPTCODE_NETWARE_IP_OPTION 63
#define DHCP_OPTCODE_NIS_DOMAIN_NAME 64
#define DHCP_OPTCODE_NIS_SERVER_ADDR 65
#define DHCP_OPTCODE_TFTP_SERVER_NAME 66
#define DHCP_OPTCODE_BOOTFILE_NAME 67
#define DHCP_OPTCODE_HOME_AGENT_ADDRS 68
#define DHCP_OPTCODE_SMTP_SERVER 69
#define DHCP_OPTCODE_POP3_SERVER 70
#define DHCP_OPTCODE_NNTP_SERVER 71
#define DHCP_OPTCODE_WWW_SERVER 72
#define DHCP_OPTCODE_FINGER_SERVER 73
#define DHCP_OPTCODE_IRC_SERVER 74
#define DHCP_OPTCODE_STREETTALK_SERVER 75
#define DHCP_OPTCODE_STDA_SERVER 76
#define DHCP_OPTCODE_USER_CLASS 77
#define DHCP_OPTCODE_DIRECTORY_AGENT 78
#define DHCP_OPTCODE_SERVICE_SCOPE 79
#define DHCP_OPTCODE_RAPID_COMMIT 80
#define DHCP_OPTCODE_CLIENT_FQDN 81
#define DHCP_OPTCODE_RELAY_AGENT 82
#define DHCP_OPTCODE_ISNS 83
#define DHCP_OPTCODE_NDS_SERVERS 85
#define DHCP_OPTCODE_NDS_TREE_NAME 86
#define DHCP_OPTCODE_NDS_CONTEXT 87
#define DHCP_OPTCODE_BCMCS_CONTROLLER_DOMAIN_NAME_LIST 88
#define DHCP_OPTCODE_BCMCS_CONTROLLER_IPV4_ADDRESS_OPTION 89
#define DHCP_OPTCODE_AUTHENTICATION 90
#define DHCP_OPTCODE_CLIENT_LAST_TRANSACTION_TIME_OPTION 91
#define DHCP_OPTCODE_ASSOCIATED_IP_OPTION 92
#define DHCP_OPTCODE_CLIENT_SYSTEM_ARCH 93
#define DHCP_OPTCODE_CLIENT_NETWORK_DEVICE_INTERFACE 94
#define DHCP_OPTCODE_LDAP 95
#define DHCP_OPTCODE_UUID_GUID 97
#define DHCP_OPTCODE_USER_AUTH 98
#define DHCP_OPTCODE_GEOCONF_CIVIC 99
#define DHCP_OPTCODE_PCODE 100
#define DHCP_OPTCODE_TCODE 101
#define DHCP_OPTCODE_NETINFO_ADDRESS 112
#define DHCP_OPTCODE_NETINFO_TAG 113
#define DHCP_OPTCODE_URL 114
#define DHCP_OPTCODE_AUTO_CONFIG 116
#define DHCP_OPTCODE_NAME_SERVICE_SEARCH 117
#define DHCP_OPTCODE_SUBNET_SELECTION_OPTION 118
#define DHCP_OPTCODE_DOMAIN_SEARCH 119
#define DHCP_OPTCODE_SIP_SERVERS_DHCP_OPTION 120
#define DHCP_OPTCODE_CLASSLESS_STATIC_ROUTE_OPTION 121
#define DHCP_OPTCODE_CABLELABS_CLIENT_CONFIG 122
#define DHCP_OPTCODE_GEOCONF_OPTION 123
#define DHCP_OPTCODE_VENDOR_CLASS 124
#define DHCP_OPTCODE_VENDOR_INFO 125
#define DHCP_OPTCODE_ETHERBOOT_SIGNATURE 128
#define DHCP_OPTCODE_DOCSIS_FULLSEC_SERVER 128
#define DHCP_OPTCODE_TFTP_SERVER_IP 128
#define DHCP_OPTCODE_KERNEL_OPTIONS 129
#define DHCP_OPTCODE_CALL_SERVER_IP 129
#define DHCP_OPTCODE_ETHERNET_IF 130
#define DHCP_OPTCODE_DISCRIMINATION_STRING 130
#define DHCP_OPTCODE_REMOTE_STATS_SERVER_IP 131
#define DHCP_OPTCODE_IEEE8021Q_VLAN_ID 132
#define DHCP_OPTCODE_IEEE8021DP_L2_PRIORITY 133
#define DHCP_OPTCODE_DIFFSERV_CODE_POINT 134
#define DHCP_OPTCODE_HTTP_PROXY 135
#define DHCP_OPTCODE_OPTION_PANA_AGENT 136
#define DHCP_OPTCODE_OPTION_V4_LOST 137
#define DHCP_OPTCODE_OPTION_CAPWAP_AC_V4 138
#define DHCP_OPTCODE_OPTION_IPV4_ADDRESS_MOS 139
#define DHCP_OPTCODE_OPTION_IPV4_FQDN_MOS 140
#define DHCP_OPTCODE_SIP_UA_CONFIG_SERVICE_DOMAINS 141
#define DHCP_OPTCODE_OPTION_IPV4_ADDRESS_ANDSF 142
#define DHCP_OPTCODE_OPTION_IPV6_ADDRESS_ANDSF 143
#define DHCP_OPTCODE_GEOLOC 144
#define DHCP_OPTCODE_FORCERENEW_NONCE_CAPABLE 145
#define DHCP_OPTCODE_RDNSS_SELECTION 146
#define DHCP_OPTCODE_TFTP_SERVER_ADDRESS 150
#define DHCP_OPTCODE_ETHERBOOT 150
#define DHCP_OPTCODE_GRUB_CONFIG_PATHNAME 150
#define DHCP_OPTCODE_STATUS_CODE 151
#define DHCP_OPTCODE_BASE_TIME 152
#define DHCP_OPTCODE_START_TIME_OF_STATE 153
#define DHCP_OPTCODE_QUERY_START_TIME 154
#define DHCP_OPTCODE_QUERY_END_TIME 155
#define DHCP_OPTCODE_DHCP_STATE 156
#define DHCP_OPTCODE_DATA_SOURCE 157
#define DHCP_OPTCODE_PXELINUX_MAGIC 208
#define DHCP_OPTCODE_CONFIG_FILE 209
#define DHCP_OPTCODE_PATH_PREFIX 210
#define DHCP_OPTCODE_REBOOT_TIME 211
#define DHCP_OPTCODE_OPTION_6RD 212
#define DHCP_OPTCODE_OPTION_V4_ACCESS_DOMAIN 213
#define DHCP_OPTCODE_SUBNET_ALLOCATION_OPTION 220
#define DHCP_OPTCODE_VIRTUAL_SUBNET_SELECTION_OPTION 221
#define DHCP_OPTCODE_END 255

/* DHCPlib Errno values */

extern int dhcplib_errno;

#define DHCP_ERRNO_CANNOT_ALLOCATE_SOCKET 1
#define DHCP_ERRNO_CANNOT_BIND_UDP 2
#define DHCP_ERRNO_DHCPDISCOVER_FAULT 3
#define DHCP_ERRNO_DHCPOFFER_RECVFROM_FAULT 4
#define DHCP_ERRNO_DHCPOFFER_SRCPORT_INVALID 5
#define DHCP_ERRNO_DHCPOFFER_READHEADER_FAULT 6
#define DHCP_ERRNO_DHCPOFFER_INVALID_XID 7
#define DHCP_ERRNO_DHCPOFFER_PREAMBLE_OP_INVALID 8
#define DHCP_ERRNO_DHCPOFFER_READOPT_FAULT 9
#define DHCP_ERRNO_DHCPREQUEST_FAULT 10
#define DHCP_ERRNO_DHCPACK_RECVFROM_FAULT 11
#define DHCP_ERRNO_DHCPACK_SRCPORT_INVALID 12
#define DHCP_ERRNO_DHCPACK_READHEADER_FAULT 13
#define DHCP_ERRNO_DHCPACK_INVALID_XID 14
#define DHCP_ERRNO_DHCPACK_PREAMBLE_OP_INVALID 15
#define DHCP_ERRNO_DHCPACK_READOPT_FAULT 16
#define DHCP_ERRNO_DHCPACK_ADDRESSES_DO_NOT_MATCH 17
#define DHCP_ERRNO_LINK_DOWN 18
#define DHCP_ERRNO_TIMEOUT 19

#define DHCP_ERRNO_MAX 19

/* DHCP information struct for enabling future renewal of the lease */
struct DHCPrenew {
	uint16_t do_renew;
	uint16_t seconds;
	uint8_t dhcpserver[4];
};

/* Functions */
int dhcp_write_header(uint8_t, uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *);
int dhcp_read_header(uint8_t, uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *);
int dhcp_write_option(uint8_t, uint8_t, uint8_t, void *);
int dhcp_read_option(uint8_t, uint8_t *, uint8_t *, uint8_t, void *);

char *dhcp_strerror(int);  // Return descriptive string of dhcplib_errno value

int dhcp_send_packet(uint8_t, uint8_t *, uint8_t);
int dhcp_validate_packet(uint8_t, uint8_t *, uint16_t, uint8_t *, uint8_t *);

int dhcp_loop_configure(uint8_t *, struct DHCPrenew *);  /* Perform DHCP configuration, optionally reporting
                                                          * back DNS server, and optionally storing Lease
                                                          * information.  If lease is not NULL and its
                                                          * do_renew variable == 1, a DHCPREQUEST + DHCPACK
                                                          * will be performed, skipping DHCPDISCOVER/DHCPOFFER.
                                                          */

#endif
